#include <thread>
#include <iostream>
#include <chrono>
#include "include/Carro.h"
#include "include/Parque.h"

const int Carro::CAPACIDADE = 5;
int Carro::numPassageiros = 0;


Carro::Carro() {
	this->voltas = 0;

}

Carro::~Carro() {
}

void Carro::esperaEncher() {
	//while (Carro::numPassageiros < Carro::CAPACIDADE) { delay; }
}

void Carro::daUmaVolta() {
	// Dorme por um tempo fixo

	// voltaAcabou = true

	// carro da uma volta se numero de passageiros == numero de acentos


	if (Carro::CAPACIDADE==Carro::numPassageiros){

      std::this_thread::sleep_for(std::chrono::milliseconds(1000));
       cout << "thread carro dormindo"<< endl;
        // voltaAcabou=true;
	}
	//voltaAcabou=false;



}

void Carro::esperaEsvaziar() {
	//while (Carro::numPassageiros > 0) { delay; }
}

int Carro::getNVoltas() {
	return voltas;
}

void Carro::run() {
	while (Parque::numPessoas > 0) {
		esperaEncher();

		daUmaVolta();

		esperaEsvaziar();

		voltas++;
	}
}

